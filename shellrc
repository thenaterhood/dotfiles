#
# Author: Nate Levesque <public@thenaterhood.com>
# Filename: bashrc
# Language: Shell
#
#####################################################
# Check if running interactively (we don't want to
# do these things if we are not)
#####################################################
[[ $- != *i* ]] && return

#####################################################
# Configure the environment
#####################################################
export EDITOR=vim
export PATH=$PATH:$HOME/bin:$HOME/.local/bin/shellzilla:$HOME/.gem/ruby/2.4.0/bin

if [ -e /usr/share/terminfo/x/xterm-256color ]; then
    export TERM=xterm-256color
fi

#####################################################
#   Sets the bash color codes to english variables
#####################################################
NORMAL="\[\033[0m\]"
RED="\[\033[31;1m\]"
GREEN="\[\033[1;32m\]"
BLUE="\[\033[34;1m\]"
CYAN="\[\033[0;36m\]"
DYELLOW="\[\033[0;33m\]"
BOLD_YELLOW="\[\033[33;1m\]"
altred="\033[1;31m"
BGGREEN="\e[30;48;5;82m"
BGBLUE="\e[30;48;5;39m"
BGYELLOW="\e[30;48;5;11m"
IBGREEN='\e[1;92m'
IBBLUE='\e[1;94m'
BWHITE='\e[1;37m'
BGREY='\e[1;30;40m'

#####################################################
# Sets a few prelimary variables for later commands
#####################################################
ROOT_UID=0
RUNNING_SHELL=`readlink -f /proc/$$/exe`

if [ `command -v powerline-daemon` ]; then
        PWRLINE=1
else
        PWRLINE=0
fi

# Determine if we just opened a shell over SSH. Note that this has
# some interesting behaviour if you're using screen, tmux, or something
# similar.
if [ ! -z "$SSH_CLIENT" ] || [ ! -z "$SSH_TTY" ]; then SSH_SESS=1; else SSH_SESS=0; fi

#####################################################
# Displays a greeting on shell start
#####################################################
echo -e "$altred"
echo -e "Current time on $(cat /etc/hostname) is `date +"%A, %T %Z"`.\n"

#####################################################
# Functions to make life easier
#####################################################

# Make an empty git repo with readme, license and gitignore
# and create a single commit
mkgit(){
	git init
        if [ ! -f README.md ]; then
            basename `pwd` > README.md
            echo -e "============" >> README.md
        fi
	echo -e '__pycache__' >> .gitignore
	echo -e 'bin' >> .gitignore
	echo -e 'LICENSE' >> LICENSE
	git add LICENSE README.md .gitignore
	git commit -m "Create repository skeleton"
}

# Forcibly kills and unmounts an SSHFS endpoint
# for unfortunate situations where SSHFS has crashed
ufsshfs(){
	killall -KILL sshfs
	fusermount -u $1
}

#####################################################
# Changes the prompt text and colors
# See bash man page for codes
#####################################################
case `basename $RUNNING_SHELL` in
	"bash"|"-bash")

	ROOTPRMT="$RED\h $RED\\w\\$ $NORMAL"
	USERPRMT="$NORMAL$BGREY\u@\h$BWHITE: $NORMAL$IBBLUE\\w\n$NORMAL$BWHITE(sh)\$ $NORMAL"
	if [ $SSH_SESS -eq 1 ]; then
		USERPRMT="$BWHITE(SSH) $USERPRMT"
	fi
	;;

	"zsh" | "zsh4" | "zsh5" | "/usr/bin/zsh")
	# Make the special keys (home/del/end) work
	bindkey -v
	eval "$(sed -n 's/^/bindkey /; s/: / /p' /etc/inputrc)" &>/dev/null

	# Set up the shell
	autoload -U colors && colors
	zstyle ':completion:*' completer _complete _ignored _approximate
	zstyle :compinstall filename $HOME/.zshrc

	autoload -Uz compinit
	compinit
	bindkey -v
	bindkey "^R" history-incremental-search-backward
	HISTSIZE=5000
	setopt APPEND_HISTORY
	SAVEHIST=5000
	HISTFILE=~/.zsh_histfile
	ROOTPRMT="%{$fg[red]%}%m %~ #%{$reset_color%}"
	# Prefacing a command with a space doesnt put it in history
	setopt histignorespace

        USERPRMT="%{$reset_color%}%{$fg_bold[grey]%}%n@%m:%{$reset_color%}%{$fg_bold[blue]%} %~"$'\n'"%{$reset_color%}%B\$ %b"
        if [ $terminfo[colors] -lt 16 ]; then
                # If you want to change the prompt if the terminal has less than
                # 16 colors, do it here.
                # An empty if is a syntax error in some shells
                USERPRMT="%n@%m: %~"$'\n'"%B$ %b"
                echo "FOO" > /dev/null
        fi

	if [ $SSH_SESS -eq 1 ]; then
                USERPRMT="%{$fg_bold[white]%}(SSH) $USERPRMT"
                if [ $terminfo[colors] -lt 16 ]; then
                        # An empty if is a syntax error in some shells
                        USERPRMT="(SSH) $USRPRMT"
                        echo "FOO" > /dev/null
                fi
	fi
	;;

esac

# Apply the actual prompts for root and users
if [ "$UID" -eq "$ROOT_UID" ]; then
	PS1="$ROOTPRMT"
else
	PS1="$USERPRMT"
fi

#####################################################
# General aliases to shorten commands/make other OS
# commands available (coming fron windows)
#####################################################
alias ls='ls --color=auto'
alias sl='ls -lr'
alias ll='ls -lh'
alias la='ls -a'
alias lal='ls -alh'
alias quit='exit'
alias cls='clear'
alias ..='cd ..'
alias KILLITWITHFIRE='killall -KILL'

alias rgr='grep -Rn --color=auto'

alias dfh='df -h'
alias dft='df -T'
alias usshfs='fusermount -u'

alias py='python'
alias py2='python2'

alias gitstat='git status'
alias gitcom='git commit'
alias gitpul='git pull'
alias gitpush='git push'
alias gush='git push'
alias gull='git pull'
alias greb='git rebase'
alias gdiff='git diff'
alias getch='git fetch'
alias gatch='git fetch --all'

alias myip="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"
alias mywan="curl icanhazip.com"
#####################################################
# Typo-related aliases
#####################################################
alias pgp='gpg'
alias fidget='figlet'
alias csv='cvs'

#####################################################
# Application-related shortcuts for accidentally
# using vim/whatever commands in bash
#####################################################
alias :q='exit'

#####################################################
# Aliases to call scripts (found in shellzilla repo)
#####################################################
alias displays='display_configurator.sh'
alias touchpad='devswitch.sh touchpad'
alias rip='audio_ripper.sh'
alias backup='system_backup.sh'
alias suspend='suspend.sh'
alias volup='volumeControl.sh up'
alias voldwn='volumeControl.sh down'
alias volmute='volumeControl.sh mute'

#####################################################
# Distro/software specific commands
#####################################################
alias sign='pgp --detach-sign'
alias verify='pgp --verify'

# Arch
alias Syu='sudo pacman -Syu'
alias pacS='sudo pacman -S'
alias pacR='sudo pacman -Rs'
alias pacs='pacman -Ss'
alias Syua='yaourt -Syua'

export GOPATH=$HOME/projects/gocode
export PATH=$PATH:$GOPATH/bin
